mod lib; // Tuodaan lib.rs näkyville

use lib::generate_features; // Tuodaan generate_features käyttöön

fn main() {
    let implementation_version = 4;
    let draw_graphs = false;

    let raw_data = vec![
        0.5300, 1.1000, 8.9700, 0.2900, 0.2600, 9.4300, -0.0600, 0.4800, 9.5500, 0.1200, 1.2200, 10.0700, -0.0900, 1.4500, 9.7700, 0.5700, 0.0400, 9.0500, 0.3200, 0.7800, 10.9600, 0.0200, 2.3800, 11.4100, 0.0600, 1.5100, 10.7200, 0.7100, 1.1600, 11.6300, 0.5800, 1.5700, 11.3700, -0.2900, 2.1000, 11.3900, -0.6200, 2.8400, 11.2700, -0.7900, 3.2000, 11.5000, -1.2500, 3.2300, 10.5100, -1.4000, 3.0200, 9.9600, -1.7300, 3.1600, 9.2100, -1.7400, 3.5600, 9.4000, -1.1300, 2.9700, 10.0700, -0.5200, 2.2000, 10.6000, -0.3800, 1.2200, 10.0400, -0.5600, 1.3100, 10.2800, -0.9700, 2.2800, 10.1000, -0.6200, 2.2300, 9.9300, -0.0300, 1.3800, 10.2200, 0.8500, 0.6200, 10.5600, 0.7300, 0.5000, 9.9500, 0.8700, 0.9700, 10.2700, 1.1000, 0.2200, 10.1300, 1.1000, -0.3800, 9.8800, 1.1600, -0.2100, 8.7500, 1.9100, 0.4000, 8.7800, 2.5700, 2.3000, 11.0000, 3.4200, -0.1000, 11.0100, 3.3400, -3.8100, 9.5000, 2.3400, -3.2900, 8.1200, 1.0600, -1.2300, 7.5600, 1.4700, 2.7900, 9.6500, 2.5800, 2.1000, 11.2300, 3.9300, -1.8000, 9.9300, 3.5800, -3.2900, 8.8200, 3.0800, -0.9300, 9.0000, 2.5700, 1.9600, 10.3300, 3.2300, 1.0400, 9.9700, 3.8600, -1.5200, 8.9200, 4.3200, -2.7100, 8.4200, 4.1100, -2.4600, 7.8600, 3.6400, 0.4900, 9.3300, 3.7000, 1.3400, 11.2100, 4.1600, -0.8100, 10.6400, 3.6700, -0.9700, 9.5600, 3.1500, -0.8100, 8.4400, 2.9000, -0.1100, 8.5000, 2.6700, 1.7600, 9.5400, 3.2900, 0.1400, 10.0900, 4.0700, -0.8800, 10.1400, 4.0000, -0.3300, 9.8600, 4.1800, 0.0900, 9.7200, 4.0900, -0.6200, 9.9900, 4.2700, -1.5300, 9.5000, 4.0800, -0.6500, 9.4800, 3.8300, 0.9400, 10.4800, 4.0600, 0.8100, 10.5900, 4.3900, 0.3300, 9.6600, 4.4600, -0.2000, 9.0800, 4.2600, -0.7900, 8.0600, 4.2900, -1.4400, 7.8400, 4.5500, -0.6800, 7.6800, 5.2100, -0.8000, 10.8600, 6.0000, -1.2300, 11.5500, 4.8200, -1.3100, 9.4900, 4.1900, -1.4500, 8.7700, 3.9200, -0.8600, 9.5900, 3.1800, 0.1300, 9.5400, 2.8100, -0.2900, 8.5900, 2.8400, -0.9700, 8.4000, 2.8200, 0.3300, 9.8700, 2.3200, -1.0600, 9.6000, 1.7600, -0.7100, 8.7900, 1.0200, 0.0400, 9.2900, 0.7200, 1.0900, 10.2700, 0.4400, 1.3600, 9.9900, -0.0200, 0.7900, 9.0600, 0.0600, 0.8600, 10.5300, -0.1200, 2.1400, 11.1200, -0.5000, 2.4600, 10.3600, -0.1300, 1.7300, 9.9900, 0.0700, 0.6500, 9.6900, -0.0100, 0.8800, 9.8400, 0.1900, 0.4300, 10.1700, 0.2900, 1.3100, 10.2100, 0.3000, 1.3000, 10.4800, 0.3000, 0.1000, 9.9700, 0.4600, 0.1300, 9.6600, 0.4400, 0.1300, 9.6600, 0.4700, 0.2800, 10.0500, 0.5700, 1.0700, 11.0800, 0.2400, 0.4600, 10.6100, -0.0400, 0.7700, 10.1400, 0.0400, 0.6900, 9.9400, -0.0200, 0.6600, 9.6400, 0.4200, 1.6800, 10.8700, 0.7000, 1.7300, 11.3000, 0.7300, 0.8100, 10.8700
    ];

    let axes = vec!["x".to_string(), "y".to_string(), "z".to_string()];
    let sampling_freq = 52;
    let scale_axes = 1;
    let input_decimation_ratio = 1;
    let filter_type = "none".to_string();
    let filter_cutoff = 0.0;
    let filter_order = 0;
    let analysis_type = "fft".to_string();

    let fft_length = 16;
    let spectral_peaks_count = 0;
    let spectral_peaks_threshold = 0;
    let spectral_power_edges = "0".to_string();

    let do_log = true;
    let do_fft_overlap = true;
    let extra_low_freq = false;

    let wavelet_level = 3;
    let wavelet = "haar".to_string();

    let result = generate_features(
        implementation_version,
        draw_graphs,
        raw_data,
        axes,
        sampling_freq,
        scale_axes,
        input_decimation_ratio,
        filter_type,
        filter_cutoff,
        filter_order,
        analysis_type,
        fft_length,
        spectral_peaks_count,
        spectral_peaks_threshold,
        spectral_power_edges,
        do_log,
        do_fft_overlap,
        wavelet_level,
        wavelet,
        extra_low_freq,
    );

    println!("generate_features result: {}", result);
}
